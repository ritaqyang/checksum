GenerateChecksum:	addi $sp $sp -24
			sw $ra 0($sp) 
			sw $s0 4($sp)
			sw $s1 8($sp) 
			sw $s2 12($sp)
			sw $s3 16($sp)
			sw $s4 20($sp) 
			
			move $s0 $a0 #save args 
			li $s1 0 #2's complement
			li $s2 0 #sum 
			li $s3 0 #current char Ascii value
			li $s4 0 # i  
			
			
			beq $a1 1 Complement
			#beq $a1 2 Parity
			move $s1 $v0 #save complement value 
			li $v0 11 #print result 
			la $a0 ($s1)
			syscall
			
			lw $ra 0($sp) 
			lw $s0 4($sp)
			lw $s1 8($sp)
			lw $s2 12($sp)
			lw $s3 16($sp)
			lw $s4 20($sp)
			addi $sp $sp 24 
			jr $ra 
			
			

Complement:  		move $t1 $a0 #save pointer to text buffer 
			li $v0 0 #initialize result  
			

LoopComplement:		
			lb $t2 0($t1)#load text buffer to t2 
			beq $t2 $0 DoneComplement #if null then end loop 
			add $v0 $v0 $t2 #otherwise add ascii value
			addi $t1 $t1 1 #get the next char in the text buffer 
			j LoopComplement


DoneComplement:		
			nor $t3 $v0 $0 #2's complement
			addi $v0 $t3 1 #add 1 
			sb $v0 ($t1) #store to buffer 
			jr $ra 